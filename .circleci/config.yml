version: 2
jobs:
  build:
    docker:
      - image: circleci/node:6
    working_directory: ~/repo
    steps:
      - checkout
#      - restore_cache:
#          keys:
#          - v1-dependencies-{{ checksum "package.json" }}
#          # fallback to using the latest cache if no exact match is found
#          - v1-dependencies-
#
      - run:
          name: install-dependencies
          command: yarn install

#      - save_cache:
#          paths:
#            - node_modules
#          key: v1-dependencies-{{ checksum "package.json" }}

#      - run:
#          name: lint
#          command: npm run lint
#
#      - run:
#          name: test
#          command: |
#            mkdir junit
#            npm test -- --reporter mocha-junit-reporter
#
#          environment:
#            MOCHA_FILE: junit/test-results.xml
#
#      - store_test_results:
#          path: junit
#
#      - store_artifacts:
#          path: junit
  build-demo-docker-image:
    docker:
      - image: circleci/node:6
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
#      - restore_cache:
#          keys:
#          - v1-dependencies-{{ checksum "package.json" }}
#          # fallback to using the latest cache if no exact match is found
#          - v1-dependencies-

      - run:
          name: install-dependencies-client-react
          command: (cd client-react && yarn install)

      - run:
          name: install-dependencies-connector-node-v1
          command: (cd connectors/node-v1 && yarn install)

      - run:
          name: install-dependencies-connector-google-drive-v2
          command: (cd connectors/google-drive-v2 && yarn install)

      - run:
          name: install-dependencies-server-nodejs
          command: (cd server-nodejs && yarn install)

      - run:
          name: install-dependencies-demo
          command: (cd demo && yarn install)

#      - save_cache:
#          paths:
#            - node_modules
#          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: build-client-static
          command: |
            cd client-react &&
            sh ./scripts/gh-pages/build.sh &&
            mv ./.gh-pages-tmp ../demo && mv ../demo/.gh-pages-tmp ../demo/static

      - run:
          name: build-server-api-docs
          command: |
            echo 'export SERVER_URL=$SERVER_URL' >> $BASH_ENV &&
            cd server-nodejs && npm run build-api-docs && mkdir -p ../demo/static/api && cp -r api-docs.tmp/docs ../demo/static/api

      - run:
          name: build-docker-image
          command: docker build -f Dockerfile.demo -t ockvolkovich/filemanager-demo:latest .

      - run:
          name: deploy-docker-image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push ockvolkovich/filemanager-demo:latest

workflows:
  version: 2
  build-all:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - gh-pages
      - build-demo-docker-image:
          requires:
            - build
          filters:
            branches:
              only:
                - master
